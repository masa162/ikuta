---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";

// ── パラメータ取得 ─
const { tag } = Astro.params;

// ── 記事メタ取得 ─
const all = await getCollection("articles");
const targets = all.filter((a) => (a.data.tags ?? []).includes(tag));

// ── 各記事フォルダの 001.jpg を静的 import ─
const thumbs = import.meta.glob(
  "../../content/articles/*/001.{jpg,jpeg,png}",
  { eager: true, import: "default" }
);
const thumbBySlug = Object.fromEntries(
  Object.entries(thumbs).map(([p, mod]) => [p.split("/").at(-2), mod])
);

// ── タグ一覧生成（静的ルーティング） ─
export async function getStaticPaths() {
  const set = new Set<string>();
  (await getCollection("articles")).forEach((a) => a.data.tags?.forEach((t) => set.add(t)));
  return [...set].map((t) => ({ params: { tag: t } }));
}
---

<BaseLayout
  title={`タグ: ${tag} | 浅夢紫月`}
  description={`${tag} に関連する観察記事一覧`}
  image="/ogp.png"
  url={`https://isuku.jp/tags/${encodeURIComponent(tag)}`}
  sideBarActiveItemID="articles"
>
  <section class="max-w-4xl mx-auto px-6 py-12">
    <h1 class="text-3xl font-bold mb-8">🏷 タグ: {tag}</h1>

    {targets.length === 0 ? (
      <p class="text-gray-500 dark:text-gray-400">まだ記事がありません。</p>
    ) : (
      <div class="space-y-6">
        {targets.map(({ slug, data }) => {
          // Front-matter > 自動サムネの順で採用
          let img: any = data.image;
          if (!img) img = thumbBySlug[slug];
          if (typeof img === "string" && !img.startsWith("/")) {
            img = thumbBySlug[slug] ?? img;
          }

          return (
            <div class="article-card">
              <HorizontalCard
                title={data.title}
                desc={data.description}
                img={img}
                url={`/articles/${slug}`}
                badge="浅夢紫月"
                tags={data.tags}
                pubDate={data.pubDate}
              />
            </div>
          );
        })}
      </div>
    )}
  </section>
</BaseLayout>
