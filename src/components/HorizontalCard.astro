---
const {
  title,
  img, // デフォルト画像は後で処理
  desc,
  url,
  badge,
  tags = [],
  pubDate,
  target = "_self"
} = Astro.props;

// Fallback画像は public ディレクトリ内を絶対パスで指定（import不可）
const FallbackImage = "/images/ogp/ogp.png";

// `img` が string or ImageMetadata どちらでも処理できるように
const imgSrc =
  typeof img === "string"
    ? img
    : img?.src ?? FallbackImage;

// 日付整形
const formattedDate = pubDate
  ? new Date(pubDate).toLocaleDateString("ja-JP", {
      year: "numeric",
      month: "long",
      day: "numeric"
    })
  : "";
---

<div class="rounded-lg bg-base-100 hover:shadow-xl transition ease-in-out hover:scale-[102%]">
  <a href={url} target={target}>
    <div class="hero-content flex-col md:flex-row gap-4">
      <img
        src={imgSrc}
        alt={title}
        class="w-full md:w-[13rem] h-auto rounded-lg object-cover"
        loading="lazy"
      />
      <div class="grow w-full">
        <h1 class="text-xl font-bold text-green-800">
          {title}
          {badge && <span class="badge badge-secondary ml-2">{badge}</span>}
        </h1>

        {formattedDate && (
          <p class="text-sm text-gray-500 mt-1">投稿日：{formattedDate}</p>
        )}

        <p class="py-1 text-base text-gray-800">{desc}</p>

        {tags.length > 0 && (
          <div class="card-actions justify-start mt-2 flex flex-wrap gap-2">
            {tags.map((tag) => (
              <a href={`/tags/${tag}`} class="badge badge-outline" ={tag}>
                {tag}
              </a>
            ))}
          </div>
        )}
      </div>
    </div>
  </a>
</div>
